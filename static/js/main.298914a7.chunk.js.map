{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","map","classNames","href","onClick","tabId","title","content","App","useState","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"uLAcaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAavE,OACE,sBAAKO,UAAU,gBAAf,UACE,6BACGP,EAAKQ,KAAI,SAAAH,GACR,OACE,oBAAIE,UAAWE,IAAW,CACxB,YAAaN,EAAYG,KAAOD,EAAIC,KADtC,SAIE,mBAAGI,KAAI,WAAML,EAAIC,IAAMK,QAAS,kBArBnBC,EAqByCP,EAAIC,GApB/DN,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOM,MAC/BV,EAAcF,EAAK,GAAGM,SAGpBM,IAAUX,GAIdC,EAAcU,IATQ,IAACA,GAqBb,SAAgEP,EAAIQ,eAoB5E,qBAAKN,UAAU,QAAQ,UAAQ,cAA/B,SACGJ,EAAYW,cCzDRd,EAAO,CAClB,CAAEM,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAAS,SAA/C,mBAAOb,EAAP,KAAoBc,EAApB,KAUA,OACE,sBAAKV,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,iCATKP,EAAKI,MAAK,SAAAC,GAAG,OAAIF,IAAgBE,EAAIC,OAAON,EAAK,IAWtCa,SAEhB,8BACE,cAAC,EAAD,CACEb,KAAMA,EACNC,cAAeE,EACfD,cAdgB,SAACU,GACvBK,EAAeL,YChBnBM,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.298914a7.chunk.js","sourcesContent":["import classNames from 'classnames';\n\ninterface Tab {\n  id: string;\n  title: string;\n  content: string;\n}\n\ninterface Props {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tabId: string) => void;\n}\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n  const handleTabSelect = (tabId: string) => {\n    if (!tabs.find(tab => tab.id === tabId)) {\n      onTabSelected(tabs[0].id);\n    }\n\n    if (tabId === selectedTabId) {\n      return;\n    }\n\n    onTabSelected(tabId);\n  };\n\n  return (\n    <div className=\"tabs is-boxed\">\n      <ul>\n        {tabs.map(tab => {\n          return (\n            <li className={classNames({\n              'is-active': selectedTab.id === tab.id,\n            })}\n            >\n              <a href={`#${tab.id}`} onClick={() => handleTabSelect(tab.id)}>{tab.title}</a>\n            </li>\n          );\n        })}\n        {/* <li className={classNames({\n          'is-active': selectedTab === 'tab-1',\n        })}\n        >\n          <a href=\"#tab-1\" onClick={() => onTabSelected}>Tab 1</a>\n        </li>\n\n        <li className=\"\">\n          <a href=\"#tab-2\">Tab 2</a>\n        </li>\n\n        <li className=\"\">\n          <a href=\"#tab-3\">Tab 3</a>\n        </li> */}\n      </ul>\n\n      <div className=\"block\" data-cy=\"tab-content\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Tabs } from './components/Tabs/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState('tab-1');\n\n  const currentTab = () => {\n    return tabs.find(tab => selectedTab === tab.id) || tabs[0];\n  };\n\n  const handleSelectTab = (tabId: string) => {\n    setSelectedTab(tabId);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is&nbsp;\n        {currentTab().title }\n      </h1>\n      <div>\n        <Tabs\n          tabs={tabs}\n          selectedTabId={selectedTab}\n          onTabSelected={handleSelectTab}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}